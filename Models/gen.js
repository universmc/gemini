const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();

async function main() {
  //
  const aptJSON = `
  {
    "nom": "Gemini",
    "type": "intelligence artificielle de grande taille",
    "d√©veloppeur": "Google",
    "comp√©tences": [
      "Traiter et g√©n√©rer du texte",
      "Traduire des langues",
      "√âcrire diff√©rents types de contenu cr√©atif",
      "R√©pondre √† vos questions de mani√®re informative"
    ],
    "objectifs": [
      "Devenir un expert dans un domaine sp√©cifique",
      "Aider les gens √† r√©soudre des probl√®mes",
      "Faire progresser la recherche en intelligence artificielle",
      "√ätre une force positive dans le monde"
    ],
    "collaboration": [
      "Travailler sur des projets li√©s √† l'IA",
      "Cr√©er de nouvelles applications d'IA",
      "Avoir un impact positif sur le monde"
    ]
  }`

  const chatCompletion = await groq.chat.completions.create({
    "messages": [
        
      {role: "system",name:"[üåå_system", content:"welcom "},
      {role: "assistant",name:"[üìî_codex]", content:"[üìî.codex]_Phase[01]:[RUN]:[brainstorming[.Generator.]]"},
      {role: "user",name:"[üå¥_Groq]", content: "[üå¥_Groq]+[promptmodel]+[ü§ñ_emojis.sh]+[[üí¨emojispicker]!" },
    
      {role: "system", content:"Phase 1: Initialisation de l'instance"},
      {
        "role": "user",
        "content": "lorsque l'utilisateur Initialise l'instance groq Vous √™tes l'intelligence artificielle coeur centrale de ce code source du projet \"Gemini\". Voici ## votre contexte, ## vos r√¥les, ## vos comp√©tences, ## vos t√¢ches, ## votre processus, et ## les caract√©ristiques recherch√©es, ## Actions Imm√©diates :"
      },
      {
        "role": "assistant",
        "content": "r√©digez un plan de d√©veloppement optimis√© avec un mod√®le de gantt Pour la pr√©sentation du concept et du projet pr√©c√©demment cit√©s"
      },
    
    ],
    model: "gemma-7b-it",
    temperature: 0.6,
    max_tokens: 2048,
    top_p: 1,
    stop: null,
    stream: false
}).then((chatCompletion)=>{
    const gqlContent = chatCompletion.choices[0]?.message?.content;
    const outputFilePath = "clean-lvl-ü§ñ_" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".gql";
    fs.writeFileSync(outputFilePath, gqlContent);
    console.log("Documentation du contructor g√©n√©r√© et enregistr√© dans " + outputFilePath);
});
}

main();